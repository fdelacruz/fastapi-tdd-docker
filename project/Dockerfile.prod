########################
#       BUILDER        #
########################

# Base image for building dependencies
FROM python:3.13.3-slim-bookworm AS builder

# ---------------------------------------------------
# 1. Install build dependencies (for compiling wheels)
# ---------------------------------------------------
RUN apt-get update \
  && apt-get -y install gcc libpq-dev netcat-traditional \
  && apt-get clean \
  && rm -rf /var/lib/apt/lists/*

# ---------------------------------------------------
# 2. Set working directory and environment
# ---------------------------------------------------
WORKDIR /usr/src/app

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1

# ---------------------------------------------------
# 3. Install Python dependencies as wheels
# ---------------------------------------------------
COPY ./requirements.txt .
COPY ./requirements-dev.txt .
RUN pip install --upgrade pip

# Build wheels
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements-dev.txt

# Install wheels so we can run linters
RUN pip install --no-cache-dir /usr/src/app/wheels/*

# ---------------------------------------------------
# 4. Copy source code & run linters
# ---------------------------------------------------
COPY . /usr/src/app/

RUN flake8 .
RUN black --exclude=migrations . --check
RUN isort . --check-only


########################
#        FINAL         #
########################

# Base image for runtime
FROM python:3.13.3-slim-bookworm

# ---------------------------------------------------
# 1. Create non-root user and app directories
# ---------------------------------------------------
RUN addgroup --system app && adduser --system --group app

ENV HOME=/home/app
ENV APP_HOME=$HOME/web
RUN mkdir -p $APP_HOME
WORKDIR $APP_HOME

# ---------------------------------------------------
# 2. Set environment variables
# ---------------------------------------------------
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    ENVIRONMENT=prod \
    TESTING=0

# ---------------------------------------------------
# 3. Install runtime system dependencies
# Only whatâ€™s needed for runtime (e.g. libpq5)
# ---------------------------------------------------
RUN apt-get update \
  && apt-get install -y --no-install-recommends libpq5 netcat-traditional \
  && apt-get clean \
  && rm -rf /var/lib/apt/lists/*

# ---------------------------------------------------
# 4. Install Python packages from builder
# ---------------------------------------------------
COPY --from=builder /usr/src/app/wheels /wheels
RUN pip install --upgrade pip \
 && pip install --no-cache /wheels/* \
 && pip install "uvicorn[standard]==0.34.1"

# ---------------------------------------------------
# 5. Copy application source code
# ---------------------------------------------------
COPY . .

# ---------------------------------------------------
# 6. Set ownership and switch to non-root user
# ---------------------------------------------------
RUN chown -R app:app $HOME
USER app

# ---------------------------------------------------
# 7. Define startup command
# ---------------------------------------------------
CMD gunicorn --bind 0.0.0.0:$PORT app.main:app -k uvicorn.workers.UvicornWorker

